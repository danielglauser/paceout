#!/bin/bash
# ----------------------------------------------------------------------------
#  Copyright 2001-2006 The Apache Software Foundation.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# ----------------------------------------------------------------------------

#   Copyright (c) 2001-2002 The Apache Software Foundation.  All rights
#   reserved.

# Most of this script was ruthelessly stolen from open source examples used in
# previous projects.

# OS specific support.  $var _must_ be set to either true or false.
darwin=false;
case "`uname`" in
    Darwin*) darwin=true
        if [ -z "$JAVA_VERSION" ] ; then
            JAVA_VERSION="CurrentJDK"
        else
            echo "Using Java version: $JAVA_VERSION"
        fi
        if [ -z "$JAVA_HOME" ] ; then
            JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
        fi
        ;;
esac

# If a specific java binary isn't specified search for the standard 'java' binary
if [ -z "$JAVACMD" ] ; then
    if [ -n "$JAVA_HOME"  ] ; then
        if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
      # IBM's JDK on AIX uses strange locations for the executables
            JAVACMD="$JAVA_HOME/jre/sh/java"
        else
            JAVACMD="$JAVA_HOME/bin/java"
        fi
    else
        JAVACMD=`which java`
    fi
fi

if [ ! -x "$JAVACMD" ] ; then
    echo "Error: JAVA_HOME is not defined correctly."
    echo "  We cannot execute $JAVACMD"
    exit 1
fi

# Linux specific bits. This will need to be reworked for other OSes.
SCRIPT=$(readlink -f "$0")
BASEDIR=$(dirname $SCRIPT)/../

# Find the most recently built Paceout JAR
for file in "$BASEDIR/target"/paceout*-standalone.jar; do
    [[ $file -nt $paceout_jar ]] && paceout_jar=$file
done

CLASSPATH=$paceout_jar

MAIN=${MAIN:-paceout.main}

exec "$JAVACMD" $JAVA_OPTS \
    $EXTRA_JVM_ARGUMENTS \
    -XX:+UseParNewGC \
    -XX:+UseConcMarkSweepGC \
    -XX:-OmitStackTraceInFastThrow \
    -XX:PermSize=256m \
    -XX:MaxPermSize=256m \
    -classpath "$CLASSPATH" \
    -Djava.awt.headless=true \
    -Dapp.name="$SAFE_APP_NAME" \
    -Dapp.pid="$$" \
    -Dfile.encoding="UTF-8" \
    -Dsun.jnu.encoding="UTF-8" \
    -Dbasedir="$BASEDIR" \
    $MAIN \
    "$@"
